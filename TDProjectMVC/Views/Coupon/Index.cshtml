@using TDProjectMVC.Helpers;
@model PaginatedList<TDProjectMVC.ViewModels.CouponVM>
<div class="container-fluid pt-4 px-4">
    <div class="bg-secondary text-center rounded p-4">
        <div id="breadcrumb" class="section py-3" style="margin-bottom:0px">
            <div class="container text-center">
                <h2>
                    <span class="text-decoration-none">
                        Mã giảm giá
                    </span>>
                </h2>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table text-start align-middle mb-0 table-hover" style="border-color:#0dcaf0;">
                @await Html.PartialAsync("Coupon", Model)
            </table>
        </div>
        <!-- Pagination Controls -->
        <div style="text-align:center; margin-top:20px;">
            <ul class="pagination" style="display: inline-flex;">
                @{
                    int pageIndex = Model.PageIndex;
                    int totalPages = Model.TotalPages;
                    int pageSizeValue = ViewBag.PageSize;
                    int startPage = ((pageIndex - 1) / 5) * 5 + 1;
                    int endPage = Math.Min(startPage + 4, totalPages);
                }
                @if (startPage > 1)
                {
                    <li class="page_item">
                        <a class="page-link" href="@Url.Action("Index", new { page = startPage - 5, pagesize = pageSizeValue})">&lt;&lt;</a>
                    </li>
                }
                @if (pageIndex > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex - 1, pagesize = ViewBag.PageSize })">&lt;</a>
                    </li>
                }
                @for (var i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, pagesize = ViewBag.PageSize })">@i</a>
                    </li>
                }
                @if (pageIndex < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex + 1, pagesize = ViewBag.PageSize })">></a>
                    </li>
                }
                @if (endPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = endPage + 1, pagesize = ViewBag.PageSize })">>></a>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>