<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Web Electro Admin</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="@Url.Content("~/Hinh/logo.png")" type="image/x-icon" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Roboto:wght@500;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <!-- Libraries Stylesheet -->
    <link href="@Url.Content("~/lib/owlcarousel/assets/owl.carousel.min.css")" rel="stylesheet">
    <link href="@Url.Content("~/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css")" rel="stylesheet" />

    <!-- Customized Bootstrap Stylesheet -->
    <link href="@Url.Content("~/css/bootstrap.min.css")" rel="stylesheet">

    <link rel="stylesheet" href="https://cdn.ckeditor.com/ckeditor5/43.3.1/ckeditor5.css">

    <!-- Template Stylesheet -->
    <link href="@Url.Content("~/css/style.css")" rel="stylesheet">
    <link href="@Url.Content("~/css/mycss.css")" rel="stylesheet">
    @* <link href="~/DataTable/datatables.min.css" rel="stylesheet"> *@
    <!-- SWEET ALERT-->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.14.3/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body>
    <!-- Header và các phần tử khác của trang web -->
    <!-- Nội dung của view sẽ được chèn vào đây -->
    @RenderBody()
    <!-- Footer và các phần tử khác của trang web -->
    <!-- External Scripts -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/chart/chart.min.js"></script>
    <script src="~/lib/easing/easing.min.js"></script>
    <script src="~/lib/waypoints/waypoints.min.js"></script>
    <script src="~/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="~/lib/tempusdominus/js/moment.min.js"></script>
    <script src="~/lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="~/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="~/js/main.js"></script>
    <script type="module" src="~/js/myjs.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <!-- cheditor cho phần mô tả sản phẩm -->
    @*     <script src="~/ckeditor/ckeditor.js"></script>*@
    <script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize CKEditor
            var editor = CKEDITOR.replace('MoTa');

            // Handle form submission
            document.querySelector('form').addEventListener('submit', function (e) {
                // Get the data from CKEditor
                var mota = editor.getData();
                // Set it in the textarea (sync CKEditor with textarea)
                document.querySelector('[name="MoTa"]').value = mota;
            });
        });
    </script>
    <!-- --- -->
    <!-- DataTable JS -->
    @*    <script src="~/DataTable/datatables.min.js"></script>
    <script>
    let table = new DataTable('#myTable');
    </script> *@
    <!-- --- -->
    <!-- SWEET ALERT -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.14.3/dist/sweetalert2.all.min.js"></script>
    <script>
        $(function () {
            var message = '@Html.Raw(TempData["success"])'; // Ngăn mã hóa HTML
            var errorMessage = '@Html.Raw(TempData["error"])';

            if (message) { // Kiểm tra nếu có thông báo thành công
                Swal.fire({
                    icon: 'success',
                    title: 'Thông báo',
                    text: message
                });
            } else if (errorMessage) { // Kiểm tra nếu có thông báo lỗi
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: errorMessage
                });
            }
        });
    </script>
    <!-- --- -->
    <!-- Section for additional scripts -->
    @await RenderSectionAsync("Scripts", required: false)
    <script>
        function toggleCommentStatus(maDg, currentStatus) {
            const newStatus = currentStatus === 1 ? 0 : 1;
            const button = document.getElementById(`status-button-${maDg}`);
            const statusText = document.getElementById(`status-text-${maDg}`);

            $.ajax({
                type: "POST",
                url: 'https://localhost:7109/api/DanhGiaSp/UpdateTrangThai',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ MaDg: maDg, TrangThai: newStatus }),
                success: function (response) {
                    alert(response.message);

                    // Update button text and status after toggling
                    button.value = newStatus === 1 ? "Ẩn đánh giá" : "Hiển thị đánh giá";
                    button.setAttribute("onclick", `toggleCommentStatus('${maDg}', ${newStatus})`);

                    // Update the status text to reflect the new state
                    statusText.textContent = newStatus === 1 ? "Hiển Thị" : "Đã Ẩn";
                },
                error: function (xhr) {
                    alert("Có lỗi xảy ra: " + xhr.responseText);
                }
            });
        }

    </script>
    <link rel="stylesheet" href="https://cdn.datatables.net/2.1.8/css/dataTables.dataTables.css" />
    <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
    <script src="https://cdn.datatables.net/2.1.8/js/dataTables.js"></script>
    <script>
        $(document).ready(function () {
            $('#myTable').DataTable({
                // Cấu hình ngôn ngữ tiếng Việt
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/vi.json',
                },
                // Tắt phân trang mặc định vì đã có phân trang từ server
                paging: false,
                // Cấu hình các tùy chọn khác
                ordering: true,
                searching: false,
                info: false,
                // Responsive
                responsive: true,
                // Tùy chỉnh style
                autoWidth: false,
                columnDefs: [
                    {
                        targets: -1, // cột cuối cùng (chức năng)
                        orderable: false, // không cho phép sắp xếp
                        searchable: false
                    }
                ],
                // Tùy chỉnh độ dài của bảng
                scrollY: '50vh',
                scrollCollapse: true,
            });
        });
    </script>
    <script>

        function toggleMode() {
            const body = document.body;
            const isDarkMode = body.classList.contains('dark-mode');

            // Toggle classes
            body.classList.toggle('dark-mode');
            body.classList.toggle('light-mode');

            // Save preference to localStorage
            localStorage.setItem('theme', isDarkMode ? 'light' : 'dark');

            // Update button icons
            updateThemeIcons(!isDarkMode);
        }

        function updateThemeIcons(isDark) {
            const lightIcon = document.querySelector('.icon-light');
            const darkIcon = document.querySelector('.icon-dark');

            if (isDark) {
                lightIcon.style.display = 'none';
                darkIcon.style.display = 'inline-block';
            } else {
                lightIcon.style.display = 'inline-block';
                darkIcon.style.display = 'none';
            }
        }

        // Initialize theme on page load
        document.addEventListener('DOMContentLoaded', function () {
            const savedTheme = localStorage.getItem('theme') || 'light';
            const body = document.body;

            if (savedTheme === 'dark') {
                body.classList.add('dark-mode');
                body.classList.remove('light-mode');
            } else {
                body.classList.add('light-mode');
                body.classList.remove('dark-mode');
            }

            updateThemeIcons(savedTheme === 'dark');
        });
    </script>
    <style>
        /* Dark mode styles */
        :root {
            --bg-dark: #191C24;
            --text-dark: #fff;
            --sidebar-dark: #191C24;
            --content-dark: #000000;
            --bg-light: #fff;
            --text-light: #191C24;
            --sidebar-light: antiquewhite;
            --content-light: #f5f7fd;
        }

        /* Dark mode */
        .dark-mode .bg-secondary {
            background-color: var(--bg-dark) !important;
        }

        .dark-mode .table {
            color: var(--text-dark) !important;
        }

        .dark-mode .sidebar {
            background-color: var(--sidebar-dark) !important;
        }

        .dark-mode .content {
            background-color: var(--content-dark) !important;
        }

        .dark-mode .navbar {
            background-color: var(--bg-dark) !important;
        }

        .dark-mode .dropdown-menu {
            background-color: var(--bg-dark) !important;
            color: var(--text-dark) !important;
        }

        /* Light mode */
        .light-mode .bg-secondary {
            background-color: var(--bg-light) !important;
        }

        .light-mode .table {
            color: var(--text-light) !important;
        }

        .light-mode .sidebar {
            background-color: var(--sidebar-light) !important;
        }

        .light-mode .content {
            background-color: var(--content-light) !important;
        }

        .light-mode .navbar {
            background-color: var(--bg-light) !important;
        }

        .light-mode .dropdown-menu {
            background-color: var(--bg-light) !important;
            color: var(--text-light) !important;
        }

    </style>
    <script>
        function toggleAccountStatus(username, currentStatus) {
            currentStatus = (currentStatus === 'true' || currentStatus === true);

            $.ajax({
                url: `https://localhost:7109/api/KhachHangs/UpdateTrangThai`,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    UserName: username,
                    HieuLuc: !currentStatus
                }),
                success: function (response) {
                    const button = $("#status-button-" + username);
                    const statusText = $("#status-text-" + username + " span");

                    if (currentStatus) {
                        button.val("Mở tài khoản");
                        statusText.text("Không hoạt động");
                    } else {
                        button.val("Khóa tài khoản");
                        statusText.text("Đang hoạt động");
                    }

                    button.attr("onclick", `toggleAccountStatus('${username}', ${!currentStatus})`);
                    alert(response.message || "Cập nhật trạng thái thành công!");
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                    alert("Đã có lỗi xảy ra: " + (xhr.responseText || "Không thể cập nhật trạng thái"));
                }
            });
        }
    </script>
    <script>
        $(document).ready(function () {
            $(".testimonial-carousel").owlCarousel({
                items: 1, // Show only one product at a time
                loop: true, // Enable looping
                margin: 10,
                nav: true, // Enable navigation buttons
                dots: true, // Enable dots for pagination
                navText: ["<div class='owl-prev'>‹</div>", "<div class='owl-next'>›</div>"]
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const items = document.querySelectorAll('.testimonial-item');
            const dots = document.querySelectorAll('.owl-dot');
            let currentIndex = 0;
            const autoPlayDelay = 5000; // 5 seconds
            let autoPlayInterval;

            function showItem(index) {
                // Remove all classes first
                items.forEach(item => {
                    item.classList.remove('active', 'prev', 'next');
                });
                dots.forEach(dot => dot.classList.remove('active'));

                // Add appropriate classes
                items[currentIndex].classList.remove('active');
                items[currentIndex].classList.add('prev');

                currentIndex = index;

                items[currentIndex].classList.add('active');
                dots[currentIndex].classList.add('active');

                // Reset autoplay timer
                resetAutoPlay();
            }

            function nextItem() {
                const nextIndex = (currentIndex + 1) % items.length;
                showItem(nextIndex);
            }

            function resetAutoPlay() {
                clearInterval(autoPlayInterval);
                autoPlayInterval = setInterval(nextItem, autoPlayDelay);
            }

            // Add click event to each dot
            dots.forEach(dot => {
                dot.addEventListener('click', function () {
                    const index = parseInt(this.getAttribute('data-index'));
                    showItem(index);
                });
            });

            // Start autoplay
            resetAutoPlay();

            // Pause autoplay on hover
            const carousel = document.querySelector('.owl-carousel');
            carousel.addEventListener('mouseenter', () => clearInterval(autoPlayInterval));
            carousel.addEventListener('mouseleave', resetAutoPlay);
        });
    </script>
</body>
</html>
