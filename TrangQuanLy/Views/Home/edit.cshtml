@model TrangQuanLy.Models.HoaDonViewModel
@{
    ViewData["Title"] = "Edit";
    Layout = "_Footer-Header";
}
<div class="container-fluid pt-4 px-4">
    <div class="bg-secondary rounded h-100 p-4">
        <h5 class="mb-4">Cập nhật đơn hàng</h5>
        <form asp-action="Edit" asp-route-MaHD="@Model.MaHD" method="post" enctype="multipart/form-data">
            <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
            <div class="form-content">
                <div class="form-fields">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" name="MaHD" asp-for="MaHD" />
                    <div class="form-group">
                        <label asp-for="MaKH" class="control-label">Mã khách hàng</label>
                        <input asp-for="MaKH" style="background-color: #5c5c5c;" class="form-control" readonly />
                        <span asp-validation-for="MaKH" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="HoTen" class="control-label">Họ Tên</label>
                        <input asp-for="HoTen" class="form-control" />
                        <span asp-validation-for="HoTen" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DienThoai" class="control-label">Điện Thoại</label>
                        <input asp-for="DienThoai" class="form-control" />
                        <span asp-validation-for="DienThoai" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="NgayDat" class="control-label">Ngày đặt</label>
                        <input asp-for="NgayDat" class="form-control" />
                        <span asp-validation-for="NgayDat" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="DiaChi" class="control-label">Địa chỉ</label>
                        <input asp-for="DiaChi" class="form-control" />
                        <span asp-validation-for="DiaChi" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="CachThanhToan" class="control-label">Cách thanh toán</label>
                        <input asp-for="CachThanhToan" class="form-control" />
                        <span asp-validation-for="CachThanhToan" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="CachVanChuyen" class="control-label">Cách vận chuyển</label>
                        <input asp-for="CachVanChuyen" class="form-control" />
                        <span asp-validation-for="CachVanChuyen" class="text-danger"></span>
                    </div>

                    @*                     <div class="form-group">
                    <label asp-for="PhiVanChuyen" class="control-label">Phí vận chuyển</label>
                    <input asp-for="PhiVanChuyen" class="form-control" />
                    <span asp-validation-for="PhiVanChuyen" class="text-danger"></span>
                    </div>   *@
                    <td style="color: white;">
                        <select asp-for="@Model.MaTrangThai" class="form-select form-select-sm mb-3" aria-label=".form-select-sm example" data-original-value="@Model.MaTrangThai">
                            @await Component.InvokeAsync("TrangThaiHd", new { maTrangThai = Model.MaTrangThai })
                        </select>
                    </td>

                    <div class="form-floating">
                        <textarea asp-for="GhiChu" class="form-control" placeholder="Leave a comment here" id="floatingTextarea" style="height: 150px;"></textarea>
                        <label for="floatingTextarea">Ghi chú</label>
                    </div>

                </div>
                <div class="col-md-5 order-details">
                    <div class="section-title text-center">
                        <h3 class="title">Chi Tiết Hóa Đơn</h3>
                    </div>
                    <div class="order-summary">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Products</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Handle</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.ChiTietHds.Count; i++)
                                {

                                    <tr class="product-widget" data-id="@Model.ChiTietHds[i].MaHH">
                                        <input type="hidden" asp-for="ChiTietHds[i].MaCtHd" />
                                        <input type="hidden" asp-for="ChiTietHds[i].IsDeleted" value="false" />
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="~/Hinh/Hinh/HangHoa/@Model.ChiTietHds[i].MaHH/@Model.ChiTietHds[i].HinhAnh" class="img-fluid me-5" style="width: 80px; height: 80px;" alt="@Model.ChiTietHds[i].TenHangHoa">
                                            </div>
                                        </td>
                                        <td>
                                            <p class="mb-0">
                                                <a style="color: white" href="#">@Model.ChiTietHds[i].TenHangHoa</a>
                                            </p>
                                            <input type="hidden" asp-for="ChiTietHds[i].MaHH" />
                                        </td>
                                        <td>
                                            <p class="mb-0" style="width: 100px;">
                                                <input type="text" asp-for="ChiTietHds[i].DonGia" class="form-control" />
                                            </p>
                                        </td>
                                        <td>
                                            <div class="input-group quantity" style="width: 90px;">
                                                <input type="number" asp-for="ChiTietHds[i].SoLuong" class="form-control form-control-sm text-center" />
                                            </div>
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-danger" onclick="removeRow(this)">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                        <div class="order-col" style="display: grid; grid-template-columns: 150px 1fr; border-top: 1px solid #fff; border-bottom: none; margin-top: 10px">
                            <div><strong>Phí vận chuyển:</strong></div>
                            <div style="color: #60dff5">@String.Format("{0:#,##0} VND", Model.PhiVanChuyen)</div>
                            <input type="hidden" asp-for="PhiVanChuyen" />
                        </div>

                        <!-- Calculate the updated total -->
                        <div class="order-col" style="display: grid; grid-template-columns: 150px 1fr">
                            <div><strong>Tổng cộng:</strong></div>
                            <div>
                                <strong class="order-total" style="color: #04daff">
                                    @String.Format("{0:#,##0} VND", Model.ChiTietHds.Sum(c => c.DonGia * c.SoLuong) + Model.PhiVanChuyen)
                                </strong>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="form-group submit-button" style="position: relative;">
                <button type="submit" class="btn btn-outline-info m-2" style="position: absolute; bottom: 752px; right: 60px;">
                    <i class="bi bi-save-fill"></i>  save
                </button>
            </div>
        </form>
    </div>
    <a asp-action="Index" class="btn btn-danger" style="position: absolute; top:105px; right:55px">X</a>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Add event listeners for quantity and price changes
            const inputs = document.querySelectorAll('input[type="number"], input[type="text"]');
            inputs.forEach(input => {
                input.addEventListener('change', updateTotal);
            });
            updateTotal();
        });
    </script>
    <script>
        // Cập nhật tổng cộng
        function updateTotal() {
            let total = 0;
            const rows = document.querySelectorAll('tr.product-widget');

            rows.forEach(row => {
                // Chỉ tính các hàng hiển thị (không bị xóa tạm thời)
                if (row.style.display !== 'none') {
                    const quantity = parseInt(row.querySelector('input[name$=".SoLuong"]').value) || 0;
                    const price = parseFloat(row.querySelector('input[name$=".DonGia"]').value) || 0;
                    total += quantity * price;
                }
            });

            // Thêm phí vận chuyển
            const shippingFee = parseFloat(document.querySelector('input[name="PhiVanChuyen"]').value) || 0;
            total += shippingFee;

            // Cập nhật tổng cộng hiển thị
            const formattedTotal = new Intl.NumberFormat('vi-VN').format(total) + ' VND';
            document.querySelector('.order-total').textContent = formattedTotal;
        }

        // Xóa tạm thời (chỉ trên UI)
        function removeRow(button) {
            Swal.fire({
                title: 'Xác nhận xóa',
                text: 'Bạn có chắc chắn muốn xóa sản phẩm này?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Đồng ý',
                cancelButtonText: 'Hủy bỏ'
            }).then((result) => {
                if (result.isConfirmed) {
                    const row = button.closest('tr');
                    const isDeletedInput = row.querySelector('input[name$=".IsDeleted"]');
                    if (isDeletedInput) {
                        isDeletedInput.value = 'true';
                        row.style.display = 'none';
                        // Cập nhật tổng sau khi xóa
                        updateTotal();
                
                        // Hiển thị thông báo thành công (tùy chọn)
                        Swal.fire(
                            'Đã xóa!',
                            'Sản phẩm đã được xóa khỏi danh sách.',
                            'success'
                        );
                    }
                }
            });
        }

        // Khởi tạo khi trang được tải
        document.addEventListener('DOMContentLoaded', function () {
            // Thêm sự kiện lắng nghe cho thay đổi số lượng và giá
            const quantityInputs = document.querySelectorAll('input[name$=".SoLuong"]');
            quantityInputs.forEach(input => {
                input.addEventListener('change', function () {
                    updateTotal();
                });
            });

            const priceInputs = document.querySelectorAll('input[name$=".DonGia"]');
            priceInputs.forEach(input => {
                input.addEventListener('change', function () {
                    updateTotal();
                });
            });

            // Ghi đè sự kiện gửi form
            const form = document.querySelector('form[asp-action="Edit"]');
            if (form) {
                form.addEventListener('submit', function (event) {
                    // Đảm bảo các mục đã xóa được đánh dấu đúng
                    document.querySelectorAll('tr.product-widget').forEach(row => {
                        if (row.style.display === 'none') {
                            const isDeletedInput = row.querySelector('input[name$=".IsDeleted"]');
                            if (isDeletedInput) {
                                isDeletedInput.value = 'true';
                            }
                        }
                    });
                });
            }

            // Tính toán tổng cộng ban đầu
            updateTotal();
        });
    </script>

}