@model PaginatedList<HoaDonViewModel>
@using TrangQuanLy.Helpers;
@{
    ViewData["Title"] = "Home Page";
    Layout = "_Footer-Header";
}
<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-chart-line fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Today Orders</p>
                    <h6 class="mb-0">
                        Số Đơn hàng hôm nay: @ViewBag.Statistics.ToDayOrders
                    </h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-chart-bar fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Order not approved</p>
                    <h6 class="mb-0">
                        Đơn hàng chưa được duyệt: @ViewBag.Statistics.NotApprovedOrders
                    </h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-chart-area fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Tháng</p>
                    <h6 class="mb-0">Số đơn hàng: @ViewBag.Statistics.TotalOrders</h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="bg-secondary rounded d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-chart-pie fa-3x text-primary"></i>
                <div class="ms-3">
                    <p class="mb-2">Tháng</p>
                    <h6 class="mb-0">Doanh thu: @ViewBag.Statistics.TotalIncome.ToString("C") VNĐ</h6>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-sm-12 col-xl-6">
            <div class="bg-secondary text-center rounded p-4">
                <div class="d-flex align-items-center justify-content-between mb-4">
                    <h6 class="mb-0">Worldwide Sales</h6>
                    <a href="/Home/ShowAll">Show All</a>
                </div>
                <canvas id="worldwide-sales" style="display: block; box-sizing: border-box; height: 360px !important; width: 721px !important;" width="721" height="360"></canvas>
            </div>
        </div>
        <div class="col-sm-12 col-xl-6">
            <div class="bg-secondary rounded h-100 p-4">
                <h6 class="mb-4">TOP SELL PRODUCT</h6>
                <div class="owl-carousel testimonial-carousel">
                    <div class="owl-stage-outer">
                        <div class="owl-stage">
                            @{
                                var products = ViewBag.DataSellProduct as List<DataSellProduct>;
                            }
                            @if (products != null && products.Any())
                            {
                                @foreach (var product in products)
                                {
                                    <div class="testimonial-item @(products.IndexOf(product) == 0 ? "active" : "")">
                                        @{
                                            string firstImageUrl = string.Empty;
                                            if (!string.IsNullOrEmpty(product.Hinh))
                                            {
                                                var imageUrls = product.Hinh.Split(',');
                                                firstImageUrl = imageUrls.FirstOrDefault();
                                            }
                                        }
                                        @if (!string.IsNullOrEmpty(firstImageUrl))
                                        {
                                            <img class="product-image" src="~/Hinh/Hinh/HangHoa/@product.MaHH/@firstImageUrl" alt="@product.TenHH">
                                        }
                                        else
                                        {
                                            <img class="product-image" src="~/Hinh/default.jpg" alt="Default Image">
                                        }
                                        <h5 class="product-name">@product.TenHH</h5>
                                        <p class="product-price">@product.DonGia.ToString("#,##0 VNĐ")</p>
                                        <p class="product-rating">Rating: @product.DiemDanhGia stars</p>
                                        <small class="product-sold">@product.SoLuong units sold</small>
                                    </div>
                                }
                                <div class="owl-dots">
                                    @for (int i = 0; i < products.Count; i++)
                                    {
                                        <div class="owl-dot @(i == 0 ? "active" : "")" data-index="@i">
                                            <span></span>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p>No sales data available.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid pt-4 px-4">
        <div class="bg-secondary text-center rounded p-4">
            <div class="d-flex align-items-center justify-content-between mb-4">
                <h6 class="mb-0">Recent Salse</h6>
                <a href="/Home/showall">Show All</a>
            </div>
            <div class="table-responsive">
                <table class="table text-start align-middle mb-0 table-hover" id="">
                    <thead>
                        <tr class="text-white">
                            <th>Mã hóa đơn</th>
                            @* <th>Mã Khách Hàng</th> *@
                            <th>Họ Tên</th>
                            <th>Số điện thoại</th>
                            <th>Địa chỉ</th>    
                            <th>Ngày đặt hàng</th>
                            <th>Mã trạng thái</th>
                            <th>Chức năng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            @await Html.PartialAsync("HoaDon", (PaginatedList<HoaDonViewModel>)Model)
                        }
                    </tbody>
                </table>
            </div>
            <!-- Pagination Controls -->
            <div style="text-align:center; margin-top:20px;">
                <ul class="pagination" style="display: inline-flex;">
                    @{
                        int pageIndex = Model.PageIndex;
                        int totalPages = Model.TotalPages;
                        int pageSizeValue = ViewBag.PageSize;
                        int startPage = ((pageIndex - 1) / 5) * 5 + 1;
                        int endPage = Math.Min(startPage + 4, totalPages);
                    }
                    @if (startPage > 1)
                    {
                        <li class="page_item">
                            <a class="page-link" href="@Url.Action("Index", new { page = startPage - 5, pagesize = pageSizeValue})">&lt;&lt;</a>
                        </li>
                    }
                    @if (pageIndex > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex - 1, pagesize = ViewBag.PageSize })">&lt;</a>
                        </li>
                    }
                    @for (var i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, pagesize = ViewBag.PageSize })">@i</a>
                        </li>
                    }
                    @if (pageIndex < totalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex + 1, pagesize = ViewBag.PageSize })">></a>
                        </li>
                    }
                    @if (endPage < totalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = endPage + 1, pagesize = ViewBag.PageSize })">>></a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="module">
        import { initializeSalesChart } from './js/myjs.js';

        const labels = @Html.Raw(Json.Serialize(ViewBag.Labels));
        const salesData1 = @Html.Raw(Json.Serialize(ViewBag.SalesData1));
        const salesData8 = @Html.Raw(Json.Serialize(ViewBag.SalesData8));
        const salesData11 = @Html.Raw(Json.Serialize(ViewBag.SalesData11));

        initializeSalesChart(labels, salesData1, salesData8, salesData11);
    </script>
}