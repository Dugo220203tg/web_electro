@using TrangQuanLy.Helpers
@model PaginatedList<TrangQuanLy.Models.AdminViewModel>

@{
    ViewData["Title"] = "User List";
    Layout = "_Footer-Header";
}

<div class="container-fluid pt-4 px-4">
    <div class="bg-secondary text-center rounded p-4">
        <div class="d-flex align-items-center justify-content-between mb-4 text-primary">
            <h3 class="mb-4" style="margin-bottom:0px;">Quản lý người dùng</h3>
            <div class="nav-item dropdown" style="display: inline-flex; justify-content:center; align-items:center; margin-left: 800px">
                <form class="d-none d-md-flex ms-4" asp-action="Search" asp-controller="Admin" method="get">
                    <input class="form-control bg-dark border-0" type="search" placeholder="Search" name="query">
                    <button type="submit" class="btn btn-square btn-outline-info m-2"><i class="fa fa-search"></i></button>
                </form>
            </div>
        </div>
        <table class="table" id="myTable">
            <thead>
                <tr class="text-white">
                    <th scope="col" style="color: white; text-align:left;">UserName</th>
                    <th scope="col" style="color: white; text-align:left;">Họ tên</th>
                    <th scope="col" style="color: white; text-align:left;">Email</th>
                    <th scope="col" style="color: white; text-align:left;">Số điện thoại</th>
                    <th scope="col" style="color: white; text-align:left;">Địa chỉ</th>
                    <th scope="col" style="color: white; text-align:left;">Hiệu lực</th>
                    <th scope="col" style="color: white; text-align:left;">Chức năng</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="color: white; text-align:left;">@Html.DisplayFor(modelItem => item.UserName)</td>
                        <td style="color: white; text-align:left;">@Html.DisplayFor(modelItem => item.Hoten)</td>
                        <td style="color: white; text-align:left;">@Html.DisplayFor(modelItem => item.Email)</td>
                        <td style="color: white; text-align:left;">@Html.DisplayFor(modelItem => item.DienThoai)</td>
                        <td style="color: white; text-align:left;">@Html.DisplayFor(modelItem => item.DiaChi)</td>
                        <td style="color: white; text-align:left;" id="status-text-@item.UserName">
                            @if (item.HieuLuc == true)
                            {
                                <span>Đang hoạt động</span>
                            }
                            else
                            {
                                <span>Không hoạt động</span>
                            }
                        </td>
                        <td style="display:flex;align-items: center; color:white">
                            <input type="button"
                                   id="status-button-@item.UserName"
                                   class="btn btn-outline-info m-2 btn-account-status"
                                   value="@(item.HieuLuc ? "Khóa tài khoản" : "Mở tài khoản")"
                                   onclick="toggleAccountStatus('@item.UserName', @(item.HieuLuc.ToString().ToLower()))" />
                            <form id="delete-form" style="margin-right:5px" method="post" asp-action="Delete">
                                <input type="hidden" name="Username" value="@item.UserName" />
                                <input type="submit" value="Delete" class="btn btn-outline-info m-2" />
                            </form>
                        </td>
                    </tr>
                }
            </tbody>


        </table>
        <div style="text-align:center; margin-top:20px;">
            <ul class="pagination" style="display: inline-flex;">
                @{
                    int pageIndex = Model.PageIndex;
                    int totalPages = Model.TotalPages;
                    int pageSizeValue = ViewBag.PageSize;
                    int startPage = ((pageIndex - 1) / 5) * 5 + 1;
                    int endPage = Math.Min(startPage + 4, totalPages);
                }
                @if (startPage > 1)
                {
                    <li class="page_item">
                        <a class="page-link" href="@Url.Action("Index", new { page = startPage - 5, pagesize = pageSizeValue})">&lt;&lt;</a>
                    </li>
                }
                @if (pageIndex > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex - 1, pagesize = ViewBag.PageSize })">&lt;</a>
                    </li>
                }
                @for (var i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, pagesize = ViewBag.PageSize })">@i</a>
                    </li>
                }
                @if (pageIndex < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex + 1, pagesize = ViewBag.PageSize })">></a>
                    </li>
                }
                @if (endPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = endPage + 1, pagesize = ViewBag.PageSize })">>></a>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>